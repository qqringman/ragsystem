services:
  # 主應用程式
  app:
    build: .
    container_name: rag-app
    ports:
      - "8501:8501"
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    volumes:
      - ./docs:/app/docs
      - ./vector_db:/app/vector_db
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - rag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL 資料庫
  postgres:
    image: postgres:15-alpine
    container_name: rag-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-raguser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ragpass}
      POSTGRES_DB: ${DB_NAME:-ragdb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - rag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-raguser}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (用於向量資料庫)
  redis:
    image: redis:7-alpine
    container_name: rag-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - rag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant (可選的向量資料庫)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: rag-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - rag-network
    restart: unless-stopped
    profiles:
      - qdrant

  # Ollama (可選的本地 LLM)
  ollama:
    image: ollama/ollama:latest
    container_name: rag-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - rag-network
    restart: unless-stopped
    # 移除 ollama 服務的 profiles 設定，讓它預設啟動
    # profiles:
    #  - ollama
    # 暫時移除 GPU 限制 (等 HW 有支援再打開)
    # deploy:
    #  resources:
    #    reservations:
    #      devices:
    #        - driver: nvidia
    #          count: all
    #          capabilities: [gpu]

networks:
  rag-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
  ollama_data: