services:
  # 主應用程式
  app:
    command: ["python3", "api_server.py"]
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: rag-app:latest
    container_name: rag-app
    ports:
      - "7777:7777"
    environment:
      - PYTHONUNBUFFERED=1
      - OLLAMA_BASE_URL=http://ollama:11434
      # 開發模式標記
      - DEV_MODE=true
      # 解決權限問題
      - CHROMA_SERVER_AUTH_PROVIDER=chromadb.auth.token.TokenAuthServerProvider
      - CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER=chromadb.auth.token.TokenAuthCredentialsProvider
      - ANONYMIZED_TELEMETRY=false
    env_file:
      - .env
    volumes:
      # 掛載源碼目錄（熱更新）
      - ./api_server.py:/app/api_server.py:ro
      - ./rag_chain.py:/app/rag_chain.py:ro
      - ./config:/app/config:ro
      - ./llm:/app/llm:ro
      - ./loader:/app/loader:ro
      - ./vectorstore:/app/vectorstore:ro
      - ./db:/app/db:ro
      - ./utils:/app/utils:ro
      - ./ui:/app/ui:ro
      - ./static:/app/static:ro
      # 資料目錄 - 使用 delegated 提升效能
      - ./docs:/app/docs
      - ./vector_db:/app/vector_db:delegated
      - ./uploads:/app/uploads:delegated
      - ./logs:/app/logs:delegated
    # 解決權限問題 - 使用與主機相同的用戶
    user: "${UID:-1000}:${GID:-1000}"
    depends_on:
      - postgres
      - redis
      - ollama
    networks:
      - rag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7777"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama LLM 服務
  ollama:
    image: ollama/ollama:latest
    container_name: rag-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - rag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL 資料庫
  postgres:
    image: postgres:15-alpine
    container_name: rag-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-raguser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ragpass}
      POSTGRES_DB: ${DB_NAME:-ragdb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - rag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-raguser}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (用於向量資料庫快取和 session)
  redis:
    image: redis:7-alpine
    container_name: rag-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - rag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant (可選的向量資料庫)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: rag-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - rag-network
    restart: unless-stopped
    profiles:
      - qdrant

networks:
  rag-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
  ollama_data: